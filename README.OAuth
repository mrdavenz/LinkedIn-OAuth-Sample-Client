This fork of iPhone OAuth Starter Kit, mimics the animations and oAuth process from FBConnect, which includes an identical animated popup Webview, called LinkedInLoginDialog. It also allows for caching the LinkedIn AccessToken, so the user doesn't need to relogin everytime.

So to use the Linkedin API, you simply need a LinkedIn object and call - (void) requestWithGraphPath:andParams:andHttpMethod:andDelegate

So for example, if the LinkedIn object was stored in the AppDelegate:

  ALMAppDelegate *appDelegate = (ALMAppDelegate *)[UIApplication sharedApplication].delegate;
  
  NSArray *permissionsNeeded = [[NSArray alloc] initWithObjects: @"r_fullprofile", @"r_contactinfo", @"r_emailaddress", nil];
  
  NSString *graph = @"people/~:(id,first-name,last-name,industry,email-address,phone-numbers)";
  
  [appDelegate.linkedin requestWithGraphPath: graph
                                   andParams: permissionsNeeded
                               andHttpMethod: @"POST"
                                 andDelegate: nil];
                                 
~Dave van Dugteren
www.alivemobile.com.au

----------------------------------------------------------
iPhone OAuth Starter Kit

Supported providers: LinkedIn (OAuth 1.0a)

Originally written by
Lee Whitney
http://whitneyland.com

Updated to add POST example and added to GitHub by:
Kirsten Jones
http://www.princesspolymath.com
----------------------------------------------------------


WHAT YOU NEED TO BUILD AND RUN THIS PROJECT:

1) XCode 4.01 or higher
2) An Api key and Secret key  (you can get this at http://developer.linkedin.com)
3) Open the file OAuthLoginView.m
4) Find the method initLinkedInApi, add your api and secret keys here.
5) Build and Run



If you have feedback it's welcome.
You can contact me via whitneyland.com (it may redirect to lee.hdgreetings.com).
I can also be contacted via the public LinkedIn web site (Lee Whitney).

Have fun.



Credits:

The OAuth library used is derived from the OAuthConsumer project.
Some changes were made but it's mostly intact.
    http://code.google.com/p/oauthconsumer/wiki/UsingOAuthConsumer

The JSON library used is JSONKit by John Engelhart.
    https://github.com/johnezang/JSONKit

Icons are from Eran Hammer-Lahav's site at http://hueniverse.com/oauth.

